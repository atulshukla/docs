openapi: 3.0.3
info:
  title: video.dev - v1
  description: Video.dev
  termsOfService: https://swagger.io/terms/
  contact:
    email: atul@video.dev
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about video.dev
  url: https://video.dev
servers:
  - url: https://api.video.dev/v1
security:
  - ApiKeyAuth: [ ]
tags:
  - name: media
    description: All apis related to video
    externalDocs:
      description: docs
      url: docs.video.dev
  - name: clips
    description: All apis related to video
    externalDocs:
      description: docs
      url: docs.video.dev
paths:
  /media/import:
    post:
      tags:
        - media
      summary: Import a media from a URL
      description: Import external media `video | audio | image`
      operationId: importMedia
      requestBody:
        content:
          application/json:
            schema:
              required:
                - source_media_url
                - type
              type: object
              properties:
                source_media_url:
                  type: string
                  example: https://video-clips-test.s3.amazonaws.com/videos/Dw7Lrzmw11Rs0pb619QjCAMeYjo1.mp4
                  description: URL of the external video source
                type:
                  $ref: '#/components/schemas/MediaTypes'
                webhook:
                  $ref: '#/components/schemas/Webhook'
        required: true
      callbacks: # Callback definition
        complete: # Event name
          'https://system.new/callbackUrl': # The callback URL,
            post:
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Media'
              responses: # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
      responses:
        '200':
          description: Video imported successfully
          content:
            application/json:
              schema:
                required:
                  - media_id
                  - source_media_url
                  - type
                  - status
                allOf:
                  - $ref: '#/components/schemas/ProcessingStatus'
                type: object
                properties:
                  media_id:
                    type: string
                  source_media_url:
                    type: string
                    example: https://video-clips-test.s3.amazonaws.com/videos/Dw7Lrzmw11Rs0pb619QjCAMeYjo1.mp4
                    description: URL of the external video source
                  type:
                    $ref: '#/components/schemas/MediaTypes'
                  webhook:
                    $ref: '#/components/schemas/Webhook'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /media/{media_id}:
    get:
      #security: []
      tags:
        - media
      summary: Get an existing media
      description: Get media by media_id
      operationId: getMedia
      parameters:
        - name: media_id
          in: path
          description: ID of media to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: Invalid status value
  /auto_clips:
    post:
      tags:
        - clips
      summary: Create clips from a video based on query/prompt
      description: Create clips from a video based on query/prompt
      operationId: createClips
      requestBody:
        description: use params.query to specify search query
        content:
          application/json:
            schema:
              required:
                - source_media_id
              type: object
              properties:
                source_media_id:
                  type: string
                  description: media_id for audio/video from which clips needs to be created
                prompt:
                  type: string
                  example: 'viral clips of 20 to 30 seconds'
                  description: (Optional) query to identify clips in the video.
                webhook:
                  $ref: "#/components/schemas/ClipWebhook"
        required: true
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ProcessingStatus'
                type: object
                required:
                  - run_id
                  - source_media
                properties:
                  run_id:
                    $ref: '#/components/schemas/RunId'
                  source_media:
                    allOf:
                      - $ref: '#/components/schemas/AudioVideo'
                    description: Source media to create clips from
                  webhook:
                    $ref: '#/components/schemas/ClipWebhook'
  /auto_clips/{run_id}:
    get:
      parameters:
        - in: path
          name: run_id
          schema:
            type: string
          required: true
          description: Reference id received from [Create Auto Clip](/reference/api/endpoint/clips/auto_clips) API
      tags:
        - clips
      summary: Create clips from a video
      description: Create clips from a video
      operationId: createClips
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CompleteStatus'
                type: object
                required:
                  - run_id
                  - clips
                properties:
                  run_id:
                    $ref: '#/components/schemas/RunId'
                  clips:
                    type: array
                    items: {
                      $ref: '#/components/schemas/Clip'
                    }
                  webhook:
                    $ref: '#/components/schemas/ClipWebhook'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /clip:
    post:
      tags:
        - clips
      summary: Create custom clip
      description: Create custom clip
      operationId: createClip
      requestBody:
        description: use params.query to specify search query
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClipParams'
              required:
                - source_video
              type: object
              properties:
                from_media_id:
                  type: string
                  description: Source media to create clips from
        required: true
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Clip'
        '400':
          description: Invalid input
        '422':
          description:
            Validation exception
  /clip/{clip_id}:
    get:
      parameters:
        - in: path
          name: clip_id
          schema:
            type: string
          required: true
      tags:
        - clips
      summary: Create clips from a video
      description: Create clips from a video
      operationId: createClips
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Clip'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /clip/{clip_id}/render_video:
    post:
      tags:
        - clips
      summary: Create clips from a video
      description: Create clips from a video
      operationId: createClips
      requestBody:
        description: Create clips from a video
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RenderVideo'
              type: object
              properties:
                webhook:
                  $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                required:
                  - render_id
                  - source_clip
                  - rendered_media
                allOf:
                  - $ref: '#/components/schemas/RenderVideo'
                  - $ref: '#/components/schemas/ProcessingStatus'
                type: object
                properties:
                  render_id:
                    $ref: '#/components/schemas/RenderId'
                  source_clip:
                    description: Source clip to render
                    allOf:
                      -  $ref: '#/components/schemas/Clip'
                  rendered_media:
                    required:
                      - media_id
                    description: Rendered media info
                    allOf:
                      - $ref: '#/components/schemas/ProcessingStatus'
                    type: object
                    properties:
                      media_id:
                        type: string
                  webhook:
                    $ref: '#/components/schemas/Webhook'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /clip/{clip_id}/render/{render_id}:
    get:
      parameters:
        - in: path
          name: render_id
          schema:
            type: string
          required: true
          description: Reference id received from [Render Video Clip](/reference/api/endpoint/clips/render_video_clip) API
      tags:
        - clips
      summary: Create clips from a video
      description: Create clips from a video
      operationId: createClips
      responses:
        '200':
          description: Clip workflow initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderVideoClipResponse'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    RenderId:
      description: Reference id to check render status
      type: string
    RunId:
      description: Reference id to fetch clips created by auto clips
      type: string
    AutoClipsCompleteEventPayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ auto_clips.complete ]
        body:
          type: object
          properties:
            run_id:
              $ref: '#/components/schemas/RunId'
            clips:
              description: Array of all clips identified.
              type: array
              items: {
                $ref: '#/components/schemas/Clip'
              }
    AutoClipsNewClipsEventPayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ auto_clips.new_clips ]
        body:
          type: object
          properties:
            run_id:
              $ref: '#/components/schemas/RunId'
            clips:
              type: array
              items: {
                $ref: '#/components/schemas/Clip'
              }
    ErrorPayload:
      required:
        - status
        - error_description
      properties:
        error_description:
          type: string
          description: Error description
    ImportMediaErrorPayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ media.error ]
        body:
          allOf:
            - $ref: '#/components/schemas/ErrorPayload'
          type: object
          properties:
            media_id:
              type: string
    AutoClipsErrorPayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ auto_clips.error ]
        body:
          required:
            - run_id
          allOf:
            - $ref: '#/components/schemas/ErrorPayload'
          type: object
          properties:
            run_id:
              $ref: '#/components/schemas/RunId'
    RenderVideoClipErrorPayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ render_video_clip.error ]
        body:
          required:
            - run_id
          allOf:
            - $ref: '#/components/schemas/ErrorPayload'
          type: object
          properties:
            render_id:
              $ref: '#/components/schemas/RenderId'
    RenderVideoClipCompletePayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ render_video_clip.complete ]
        body:
          allOf:
            - $ref: '#/components/schemas/RenderVideoClipResponse'
          type: object
          properties:
            status:
              type: string
              enum:
                - complete

    ImportMediaCompletePayload:
      required:
        - body
        - event
      type: object
      properties:
        event:
          type: string
          enum: [ media.complete ]
        body:
          allOf:
            - $ref: '#/components/schemas/Media'
          type: object
          properties:
            status:
              type: string
              enum:
                - complete
    ClipParams:
      required:
        - start_time_ms
        - end_time_ms
      type: object
      properties:
        start_time_ms:
          type: number
          description: Start time (milliseconds) of clip in source media
        end_time_ms:
          type: number
          description: End time (milliseconds) of clip in source media
    Status:
      type: string
      enum: &Status
        - complete
        - processing
        - error
    CompleteStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          example: "complete"
          enum: *Status
    ProcessingStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          example: "processing"
          enum: *Status
    ErrorStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          example: "error"
          enum: *Status
    RenderVideo:
      type: object
      properties:
        crop:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
              description: Whether to perform cropping
            aspect_ratio:
              type: string
              default: '9:16'
              enum: [ 1:1, 4:3, 3:4, 4:5, 5:4, 9:16 ]
              example: 16:9
            smart_crop:
              type: boolean
              default: false
              description: Auto-picks the main subject to focus on while cropping.
    ClipWebhook:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          example: https://system.new/webhook/v1
        events:
          type: array
          items:
            required:
              - type
            type: string
            enum: [ new_clips, complete, error ]
    Webhook:
      description: Callback to listen for events
      required:
        - url
      type: object
      properties:
        url:
          type: string
          example: https://system.new/webhook/v1
        events:
          type: array
          items:
            required:
              - type
            type: string
            enum: [ complete, error ]
    MediaTypes:
      type: string
      enum: &MediaTypes
        - video
        - audio
        - image
      description: Type of media
    VideoProps:
      type: object
      properties:
        type:
          type: string
          enum: [ video ]
        duration_ms:
          type: number
          description: The duration of the video in milliseconds
        fps:
          type: number
          description: The frame rate of the video
        frame_count:
          type: number
          description: The number of frames in the video
        width:
          type: number
          description: The width of the video
        height:
          type: number
          description: The height of the video
        channels:
          type: number
          description: The number of channels in the video
    AudioProps:
      type: object
      properties:
        type:
          type: string
          enum: [ audio ]
        duration_ms:
          type: number
          description: The duration of the audio in milliseconds
        channels:
          type: number
          description: The number of channels in the audio
    ImageProps:
      type: object
      properties:
        type:
          type: string
          enum: [ image ]
        width:
          type: number
          description: The width of the image
        height:
          type: number
          description: The height of the image
        channels:
          type: number
          description: The number of channels in the image
    MediaBase:
      required:
        - media_id
      type: object
      properties:
        media_id:
          type: string
          description: Identifier for the media
        media_url:
          type: string
          example: https://storage.xyz/media.mp4
          description: video.dev hosted media url
      allOf:
        - $ref: '#/components/schemas/CompleteStatus'
    Media:
      required:
        - status
        - media_id
      type: object
      properties:
        media_info:
          oneOf:
            - $ref: '#/components/schemas/VideoProps'
            - $ref: '#/components/schemas/AudioProps'
            - $ref: '#/components/schemas/ImageProps'
      allOf:
        - $ref: '#/components/schemas/MediaBase'
    AudioVideo:
      type: object
      properties:
        media_info:
          oneOf:
            - $ref: '#/components/schemas/VideoProps'
            - $ref: '#/components/schemas/AudioProps'
      allOf:
        - $ref: '#/components/schemas/MediaBase'
    Video:
      type: object
      properties:
        media_info:
          $ref: '#/components/schemas/VideoProps'
      allOf:
        - $ref: '#/components/schemas/MediaBase'
    Clip:
      required:
        - clip_id
        - duration_ms
        - source_media
      allOf:
        - $ref: '#/components/schemas/ClipParams'
      type: object
      properties:
        clip_id:
          type: string
          description: Identifier for the clip
        duration_ms:
          type: number
          description: Duration of the clip in milliseconds
        source_media:
          allOf:
          - $ref: '#/components/schemas/AudioVideo'
          description: Source media to create clip from
    RenderVideoClipResponse:
      required:
        - render_id
        - source_clip
        - rendered_media
      allOf:
        - $ref: '#/components/schemas/RenderVideo'
        - $ref: '#/components/schemas/CompleteStatus'
      type: object
      properties:
        render_id:
          $ref: '#/components/schemas/RenderId'
        source_clip:
          description: Source clip to render
          allOf:
            - $ref: '#/components/schemas/Clip'
        rendered_media:
          description: Rendered media info
          allOf:
            - $ref: '#/components/schemas/Video'

        webhook:
          $ref: '#/components/schemas/Webhook'
